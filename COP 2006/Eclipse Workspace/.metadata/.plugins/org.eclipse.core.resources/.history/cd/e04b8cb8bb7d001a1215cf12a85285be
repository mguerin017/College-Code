import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Scanner;
import java.util.ArrayList;

/* @author Mark Guerin
 * This program computes charge time, costs, and revenue for a Tesla supercharging station.
 */

public class SuperChargerV2 {
	
	public static void main(String[] args) {
		
		// Create objects
		totals total = new totals();
		calculations calculator = new calculations(total);
		
		// Initialize variables
		Scanner keyboard = new Scanner(System.in);
		int stalls = 0;
		int vehicles = 0;
		NumberFormat twoDec = new DecimalFormat("#0.00");
		NumberFormat noDec = new DecimalFormat("#");
		
		// Create a loop for the number of stalls
		
		System.out.println("How many stalls are at the charging station?");
		stalls = keyboard.nextInt();
		
		for (int i = 1; i < stalls+1; i++) {
			
			// Create a loop for the number of vehicles
			
			System.out.println("How many vehicles used stall " + i + "?");
			vehicles = keyboard.nextInt();
			
			for (int j = 1; j < vehicles+1; j++) {
				
				// Calculate and output the charge time and cost of the individual vehicles
				
				System.out.println("Enter the battery capacity of vehicle " + j + " in kWh.");
				calculator.setCap(keyboard.nextDouble());
						
				System.out.println("What percentage of vehicle " + j + "'s battery was charged?");
				calculator.setPercent(keyboard.nextDouble());
				
				System.out.println("Was vehicle " + j + " a model granted complimentary charging? Enter 1 for yes, or 0 for no.");
				calculator.setComplimentary(keyboard.nextInt());
				System.out.println();
				
				// Add to totals based on whether the vehicle charges for free
				
				calculator.calculateTotals();
			}
		// Output values to the user
			System.out.println("The total revenue generated by stall " + i + " was $" + twoDec.format(total.getStallTotal()) + ".");
			System.out.println("The total time spent charging at stall " + i + " was " + noDec.format(Math.floor(total.getStallTime())) + " hours and " + noDec.format(Math.floor(((total.getStallTime() - Math.floor(total.getStallTime())) * 60))) + " minutes.");
			total.setStallTotal(0);
			total.setStallTime(0);
			System.out.println();
		}
		System.out.println("The total revenue generated at the charging station was $" + twoDec.format(total.getTotal()) + ".");
		System.out.println("The total time spent charging at the charging station was " + noDec.format(Math.floor(total.getTime())) + " hours and " + noDec.format(Math.floor(((total.getTime() - Math.floor(total.getTime())) * 60))) + " minutes.");
		System.out.println("The total cost of free charging given out at the charging station was $" + twoDec.format(total.getTotalComplimentary()) + ".");
		System.out.println("The total time spent charging for free at the charging station was " + noDec.format(Math.floor(total.getTimeComplimentary())) + " hours and " + noDec.format(Math.floor(((total.getTimeComplimentary() - Math.floor(total.getTimeComplimentary())) * 60))) + " minutes.");
		keyboard.close();
	}
}
