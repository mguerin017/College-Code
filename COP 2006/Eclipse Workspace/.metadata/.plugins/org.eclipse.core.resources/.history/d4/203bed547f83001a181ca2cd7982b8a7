import java.util.*;
import java.io.*;
import java.lang.*;
import java.text.DecimalFormat;
import java.text.NumberFormat;

public class TollCollection {

	private final double BASERATE = 2.00;
	private final int ELECTRIC = 1;
	private final int HYBRID = 2;
	private final int GASOLINE = 3;
	private final int CASH = 1;
	private final int CARD = 2;
	private final int ELECTRONICSYSTEM = 3;
	private double cashTotal;
	private double cardTotal;
	private double elecTotal;
	private double grandTotal;
	private Formatter tolls;
	private Scanner inputs;
	
	public void openTollsFile() {
		try {
			tolls = new Formatter("tolls.txt");
		}
		catch(Exception e) {
			System.out.println("There was a problem accessing the tolls file.");
		}
	}
	
	public void recordToTollsFile(String data) {
		tolls.format("%s", data);
	}
	
	public void closeTollsFile() {
		tolls.close();
	}
	
	public void openInputsFile() {
		try {
			inputs = new Scanner(new File("inputs.txt"));
		}
		catch(Exception e) {
			System.out.println("There was a problem accessing the inputs file.");
		}
	}
	
	public void readInputsFile() {
		while(inputs.hasNextLine()) {
			String data = inputs.nextLine();
			System.out.println(data);
		}
	}
	
	public void closeInputsFile() {
		inputs.close();
	}
	
	public double getBaseRate() {
		return this.BASERATE;
	}
	
	public double getGrandTotal() {
		return this.grandTotal;
	}
	
	public void setGrandTotal(double newGrandTotal) {
		this.grandTotal = newGrandTotal;
	}
	
	public void axles(Vehicle car) {
		if (car.getAxle() <= 3) {
			car.setVehicleTotal(car.getVehicleTotal() + car.getAxle() - 1);
		}
		else if (car.getAxle() > 3) {
			car.setVehicleTotal(car.getVehicleTotal() + 2 + (car.getAxle() - 3) * 5);
		}
		else {
			System.out.println();
			System.out.println("You have made an invalid input. Please start over.");
			return;
		}
	}
	
	public void vehicleTypes(Vehicle car) {
		if (car.getVehicleType() == ELECTRIC) {
			car.setVehicleTotal(car.getVehicleTotal() * 0.5);
		}
		else if (car.getVehicleType() == HYBRID) {
			car.setVehicleTotal(car.getVehicleTotal() * 0.75);
		}
		else if (car.getVehicleType() == GASOLINE) {
			car.setVehicleTotal(car.getVehicleTotal() * 1);
		}
		else {
			System.out.println();
			System.out.println("You have made an invalid input. Please start over.");
			return;
		}
	}
	
	public void payTypes(Vehicle car) {
		if (car.getPayType() == CASH) {
			car.setVehicleTotal(car.getVehicleTotal() * 1);
			this.cashTotal += car.getVehicleTotal();
		}
		else if (car.getPayType() == CARD) {
			car.setVehicleTotal(car.getVehicleTotal() * 1.15);
			this.cardTotal += car.getVehicleTotal();
		}
		else if (car.getPayType() == ELECTRONICSYSTEM) {
			car.setVehicleTotal(car.getVehicleTotal() * 0.8);
			this.elecTotal += car.getVehicleTotal();
		}
		else {
			System.out.println();
			System.out.println("You have made an invalid input. Please start over.");
			return;
		}
	}
	
	public static void main(String[] args) {
		TollCollection calculate = new TollCollection();
		TollStation station = new TollStation();
		TollBooth booth = new TollBooth();
		Vehicle car = new Vehicle();
		NumberFormat twoDec = new DecimalFormat("#0.00");
		calculate.openTollsFile();
		//The following loop may be used to add a note or date at the beginning of the output file when running the program through a command line
		for (String string : args) {
			calculate.recordToTollsFile(string + " \n");
		}
		station.countBooths(calculate, station, booth, car);
		System.out.println("The total collected via cash is $" + twoDec.format(calculate.cashTotal) + ".");
		calculate.recordToTollsFile("The total collected via cash is $" + twoDec.format(calculate.cashTotal) + ".\n");
		System.out.println("The total collected via card is $" + twoDec.format(calculate.cardTotal) + ".");
		calculate.recordToTollsFile("The total collected via card is $" + twoDec.format(calculate.cardTotal) + ".\n");
		System.out.println("The total collected via electronic systems is $" + twoDec.format(calculate.elecTotal) + ".");
		calculate.recordToTollsFile("The total collected via electronic systems is $" + twoDec.format(calculate.elecTotal) + ".\n");
		System.out.println("The grand total collected by the station is $" + twoDec.format(calculate.grandTotal) + ".");
		calculate.recordToTollsFile("The grand total collected by the station is $" + twoDec.format(calculate.grandTotal) + ".\n");
		calculate.closeTollsFile();
	}

}
