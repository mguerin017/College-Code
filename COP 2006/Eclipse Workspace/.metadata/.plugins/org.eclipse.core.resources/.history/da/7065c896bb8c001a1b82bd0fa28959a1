import java.util.*;
import java.io.*;
import java.text.DecimalFormat;
import java.text.NumberFormat;

public class TollStation {

	private int numBooths;
	private ArrayList<TollBooth> tollBoothList;
	private int i;
	
	// Use these methods to manage loop iteration
		public int getI() {
			return this.i;
		}
		
		public void setI(int newI) {
			this.i = newI;
		}
		
	// Use these methods to manage the number of toll booths
		public int getNumBooths() {
			return this.numBooths;
		}
		
		public void setNumBooths(int newNumBooths) {
			this.numBooths = newNumBooths;
		}
		
	// Use these methods to manage the array of toll booths
		public TollStation() {
			this.tollBoothList = new ArrayList<TollBooth>();
		}
		
		public ArrayList<TollBooth> getTollBoothList() {
			return this.tollBoothList;
		}
		
		public void addToTollBoothList(TollBooth booth) {
			this.tollBoothList.add(booth);
		}
		
		public TollBooth getIndexTollBoothList(int index) {
			return this.tollBoothList.get(index);
		}
		
		public int getSizeTollBoothList() {
			return this.tollBoothList.size();
		}
		
	// Use the following method to create an object for each toll booth
		public void countBooths(TollCollection calculate, TollStation station, TollBooth booth, Vehicle car) {
			NumberFormat twoDec = new DecimalFormat("#0.00");
			Scanner keyboard = new Scanner(System.in);
			try {
				System.out.println("How many toll booths were used at the station?");
				station.setNumBooths(calculate.inputBoothsFile());
				System.out.println(station.getNumBooths());
			}
			catch(EOFException e) {
				System.out.println("There was not enough data entered in the file 'booths.txt' to complete the execution of the program. For now, enter the number of booths manually. The number must be a nonnegative integer.");
				while(!keyboard.hasNextInt() || keyboard.nextInt() < 0) {
					System.out.println("Invalid input, try again.");
					keyboard.next();
				}
				station.setNumBooths(keyboard.nextInt());
			}
			catch(Exception e){
				System.out.println("An unknown error occurred. Please check the file named 'booths.txt'. For now, enter the number of booths manually. The number must be a nonnegative integer.");
				while(!keyboard.hasNextInt() || keyboard.nextInt() < 0) {
					System.out.println("Invalid input, try again.");
					keyboard.next();
				}
				station.setNumBooths(keyboard.nextInt());
			}
			for (station.setI(1); station.getI() < station.getNumBooths() + 1; station.setI(station.getI()+1)) {
				station.addToTollBoothList(new TollBooth());
				booth.countVehicles(station, car, calculate);
				calculate.setGrandTotal(calculate.getGrandTotal() + booth.getBoothTotal());
				System.out.println("The total tolls collected by booth " + station.getI() + " is $" + twoDec.format(booth.getBoothTotal()) + ".");
				calculate.recordToTollsFile("The total tolls collected by booth " + station.getI() + " is $" + twoDec.format(booth.getBoothTotal()) + ".\n");
				booth.setBoothTotal(0);
			}
		}

}
